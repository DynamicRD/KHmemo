스레드의 이름

메인스레드의 이름:		main
작업스레드이름:		Thread-n
작업스레드 이름 변경:	thread.setName(" ");	//2번에 메생만들고 이름을 준다

동시성:	cpu하나로 다돌리기
병렬성:	cpu 여러개로 나눠돌리기

스레드 스케줄링:	스레드가 코어보다 많으면 어떤 순서로 실행할지 결정한다
		우선순위 방식(코드로제어가능,숫자가 젤 높으면 우선적), 순환할당방식(제어불가)
		컨테스트 스위칭

우선순위 설정:	 setPriority(Thread.MAX_PRIORITY)
cpu시간타임을 완벽하게 설정할 수 없다.

공유객체
동기화처리 안하면 데드락 발생하는거

동기화 처리
세마포 루텍스 크리티컬섹션 
자바에선 싱크로나이즈로 함

동기화 영역을 함수로 떄릴지 영역으로 때릴지만 결정
get set에다가 동기화처리를 하면된다
웨이트 ->블록상태로 빠졌다.
동기화영역(임계영역)처리를 함

동기화 메소드
public synchronized void 함수명( );
동기화 블록
synchronized(공유객체) {   } 해서 부분영역설정 가능

메인함수
생성->준비->실행->종료
멀티스레드
생성->준비------>실행---->종료
	ㄴ<--대기---ㅢ

스레드 객체 생성(New)--->실행대기(Runnable)------------>실행-------->종료
			        	l<---반복-------------ㅣ

	일시정지->실행대기->실행->일시정지 반복
일시정지_cpu의 재분배 WAITING(인터럽트), TIME_WAITING(sleep), BLOCKED(동기화한걔가 썻을때)

스레드 상태
일하고 있을때 runnable
getState로 확인할 수 있음
state==Thread.State.NEW
state==Thresd.State.TERMINATE

스레드 상태 제어
실행을 실행대기로 만드는것이 yield( )

실행을 일시정지시키는게 
sleep( )->실행대기,  join( )다운로드를 끝나면 끝남 다른 스레드의 종료를 기다림,wait 할게 없다

일시정지를 실행시키는게
inturrupt,notify,notifyall( )
notify( ) wait( )는 낙엽 떨구는애랑 낙엽 쓰는애랑 번갈아가면서 쓰는거
inturrpt는 모든 정지를 실행시키는 최강
sleep은 자는동안 누가 겐세이 넣으면 안되니 interrupt exception을 걸아야함

stop( )말고 플레그를 이용해서 정지시키는게 낫다
threadB.join( ); -> threadB가 끝날때 실행대기상태가된다