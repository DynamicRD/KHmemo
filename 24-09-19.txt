------------------------1장----------------------------------------
자바의 특징:	객체지향적,운영체제가 제공한 자바프로그램 용량이 4기가
		인터프리트 언어(메소드영역의 코드를, 한 라인씩 해석)와 컴파일러 동시에
		동적 메모리 구조다(필요할때 클래스 꺼내씀)
		

메소드영역:	코드 세그먼트(영역)		
		데이터 세그먼트(영역)

시스템 멤핑:	가상메모리 4기가의 위치를 집어줌
윈도우  api:	window api 정복, 김상형,가남사

path:		어떤 프로그램의 실행(명령어)을 어디서나 실행할수 있게 주는 권한

자바 api 북마크
------------------------2장----------------------------------------
클래스: 

메소드(함수)에 매개변수를 입력, 출력값을 출력
변수:	데이터를 담아주는 상자
변수의 선언은 인터프리터가 한줄 해석할때 생성

변수선언할때 쓰레기값이 들어있음. 싫으면 디폴트나 초기값 대입

byte,short,boolean도 실제론 메모리에 4바이트 잡고 해당 바이트만 사용함

리터럴 상수는 메소드영역의 상수풀에 존재
"abc"문자형 객체 리터럴 상수는 힙영역에 존재

String name = "abc"	->문자형 객체 리터럴 상수
new String("abc") 		->문자형 객체

컴파일러가 값을 안 잃어버리는 방향으로 자동 형변환

final 상수를 선언하는 키워드, 초기값 필수

단항 이항(산성비논) 삼함 비교 콤마
------------------------3장----------------------------------------
배열은 기본 디폴트값이라 대입 무필요
------------------------4장----------------------------------------
실행형 클래스와 데이터 클래스가 있음
클래스에 멤버 변수,멤버 함수,생성자 함수 등
char 디폴트값:	'\u0000',0

상속받는 함수
TV.toString()

생성자 오버로딩:	생성자를 여러개 주는 행위

함수 명이 같으면 오버로딩 또는 오버라이딩이다
함수명이 같으면서 매개변수의 타입과 갯수가 틀리면 오버로딩

멤버변수 배열
private int[] a;
생성자
a = new int[size];

UML생성법
가시성표시자 = +public -private
UML화살표
-  -  -  -  -  -  -▷
일반화,클래스 상속
-----------------▷
구현,인터페이스 상속
----------------->
의존

오버라이딩 :접근제어자 같음 리턴값 같은 함수명 같음 예외처리 같음