쓰레드(thread):		메인이라는 함수

진법변환

2진법: 	(2)
8진법: 	(o)
16진법:	(x)

<수의 범위>

메모리에는 비트가 있다

x비트의 범위: 	0		~	2^x -1
정수음수 있으면:	-2^(x-1)		~	2^(x-1)-1

2^10 ->K 20->M 30->G 40->T
정수형 변수는 숫자를 4기가까지 저장 가능(0~40억-1)

맨앞의 비트 : MSB : 부호비트	,2의 보수 이용

오버플로우: 자리수 넘어가는 비트는 버려버림
	3비트 <- 13대입
	  ㅁㅁㅁ
	1 1 0 1	-> 1 0 1만 저장 -3
		
1Hz:	1초동안에 발생하는 한 주기의 진동수
	컴퓨터가 1초에 한번 덧셈하는 속도

뺄셈을 구할땐 2의 보수로 만들어 음수로 만들고 더한다.
1의 보수로 하면 더 계산을 해야한다.

정수형	byte(1),short(2),int(4),long(8)

실수형	float(4), double(8)
	
논리형	boolean(1)

객체 참조	

문자	char(2)	(유니코드 AC00~ D7A3)

실수->소수점을 2진법으로 바꿔야함
1.컴퓨터는 오류를 가지고 있다.
	0.25에 2를 2번 곱함	1.00
	0.01(2)	
	컴퓨터는 소수를 완전히 기억할 수 없다.

double 변수 저장 소수점이 맨앞 1.011100110(가수) * 2^5(지수)

float:	 1 / 8   / 23		10^38
double:	 1 / 11 / 52		10^306
	부호/지수/가수/

	지수부엔 부호비트가 없음. 중간인 127(float),1023(double) 앞뒤로 지수의 양음을 결정함

	110011.01110	지수부는 1001101110

char은 양수만 있다

쉬프트:	<<2 : *2^2,     >>3 : /2^3
	연산속도가 엄청나게 빠름
	>>>왼쪽 비트가 부호비트로 채워지지않고 0으로 채워짐